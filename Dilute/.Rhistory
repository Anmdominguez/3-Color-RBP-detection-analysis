#Will check to see if the required packages are installed and if not, will install them
packages <- c("GenomicFeatures", "dplyr", "tidyr", "ggplot2", "patchwork", "plotly", "stringr", "tidyverse", "tibble", "dtwclust")
check.package <- function(package){
if(!(package %in% installed.packages())) install.packages(package)
}
sapply(packages, check.package)
sapply(packages, require, character.only = T)
wd <- setwd('/Users/andrewd/Desktop/Analysis_Workspace/Dilute/NoCopper/')
Induced <- read.csv('Con/Outputs/AvgCell_intensity.csv')
NonInduced <- read.csv('Decon/Outputs/AvgCell_intensity.csv')
#=======================================================
# Format Induced data frame
Induced <- Induced[, -c(1:2)]
InducedNames <- paste("Induced", colnames(Induced),  sep = "_")
colnames(Induced) <- InducedNames
names(Induced)[1]<-paste("Time")
# Format NON-Induced data frame
NonInduced <- NonInduced[, -c(1:2)]
NonInducedNames <- paste("NonInduced", colnames(NonInduced),  sep = "_")
colnames(NonInduced) <- NonInducedNames
names(NonInduced)[1]<-paste("Time")
#Merge the two dataframes
MergedDFs <- merge(Induced, NonInduced, by = "Time", all = TRUE)
#Scaling the dataframes so nonInduced = 0
MergedDFs$Ch1ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch1)
MergedDFs$Ch1_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch1_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch2ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch2)
MergedDFs$Ch2_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
MergedDFs$Ch2_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
##### PLOTS ###
#Generates and outputs a plot superimposing average intensities of Channel 1 and Channel 2
Ch1 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch1`, color="No Induction (Ch1)")) +
geom_smooth( se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch1`,color = "Induction (Ch1)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction (Ch1)" = "darkgrey",
"Induction (Ch1)" = "Chartreuse3"))
Ch2 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch2`, color="No Induction (Ch2)")) +
geom_smooth(se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch2`,color = "Induction (Ch2)"), se=FALSE) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
scale_colour_manual(name = "",
values = c("No Induction (Ch2)" = "darkgrey",
"Induction (Ch2)" = "darkviolet"))
#Will generate plot with scaled Ch1 and Ch2 intensities
Overlap <- ggplot(MergedDFs, aes(x=Time, y=`Ch1_nonInd_Scaled`, color="No Induction")) +
geom_smooth( se=FALSE) +
ggtitle("Scaled Average Normalized Foci Intensity") +
ylab("Scaled Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
annotate("text", x=17, y=0.02, label=  "Acquisition", angle = 90, color= "Darkgrey") +
annotate("text", x=2, y=0.02, label=  "Induction", angle = 90, color= "Darkgrey") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Ch1_Ind_Scaled`,color = "Induction (Ch1)"), se=FALSE) +
geom_smooth(mapping =aes(x=Time, y=`Ch2_Ind_Scaled`,color = "Induction (Ch2)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction" = "grey",
"Induction (Ch1)" = "Chartreuse3",
"Induction (Ch2)" = "darkviolet"))
Ch1+Ch2
Overlap
(Ch1 | Ch2) / Overlap
#Will check to see if the required packages are installed and if not, will install them
packages <- c("GenomicFeatures", "dplyr", "tidyr", "ggplot2", "patchwork", "plotly", "stringr", "tidyverse", "tibble", "dtwclust")
check.package <- function(package){
if(!(package %in% installed.packages())) install.packages(package)
}
sapply(packages, check.package)
sapply(packages, require, character.only = T)
wd <- setwd('/Users/andrewd/Desktop/Analysis_Workspace/Dilute/')
Induced <- read.csv('Copper/Con/Outputs/AvgCell_intensity.csv')
NonInduced <- read.csv('NoCopper/Con/Outputs/AvgCell_intensity.csv')
#=======================================================
# Format Induced data frame
Induced <- Induced[, -c(1:2)]
InducedNames <- paste("Induced", colnames(Induced),  sep = "_")
colnames(Induced) <- InducedNames
names(Induced)[1]<-paste("Time")
# Format NON-Induced data frame
NonInduced <- NonInduced[, -c(1:2)]
NonInducedNames <- paste("NonInduced", colnames(NonInduced),  sep = "_")
colnames(NonInduced) <- NonInducedNames
names(NonInduced)[1]<-paste("Time")
#Merge the two dataframes
MergedDFs <- merge(Induced, NonInduced, by = "Time", all = TRUE)
#Scaling the dataframes so nonInduced = 0
MergedDFs$Ch1ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch1)
MergedDFs$Ch1_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch1_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch2ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch2)
MergedDFs$Ch2_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
MergedDFs$Ch2_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
##### PLOTS ###
#Generates and outputs a plot superimposing average intensities of Channel 1 and Channel 2
Ch1 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch1`, color="No Induction (Ch1)")) +
geom_smooth( se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch1`,color = "Induction (Ch1)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction (Ch1)" = "darkgrey",
"Induction (Ch1)" = "Chartreuse3"))
Ch2 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch2`, color="No Induction (Ch2)")) +
geom_smooth(se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch2`,color = "Induction (Ch2)"), se=FALSE) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
scale_colour_manual(name = "",
values = c("No Induction (Ch2)" = "darkgrey",
"Induction (Ch2)" = "darkviolet"))
#Will generate plot with scaled Ch1 and Ch2 intensities
Overlap <- ggplot(MergedDFs, aes(x=Time, y=`Ch1_nonInd_Scaled`, color="No Induction")) +
geom_smooth( se=FALSE) +
ggtitle("Scaled Average Normalized Foci Intensity") +
ylab("Scaled Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
annotate("text", x=17, y=0.02, label=  "Acquisition", angle = 90, color= "Darkgrey") +
annotate("text", x=2, y=0.02, label=  "Induction", angle = 90, color= "Darkgrey") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Ch1_Ind_Scaled`,color = "Induction (Ch1)"), se=FALSE) +
geom_smooth(mapping =aes(x=Time, y=`Ch2_Ind_Scaled`,color = "Induction (Ch2)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction" = "grey",
"Induction (Ch1)" = "Chartreuse3",
"Induction (Ch2)" = "darkviolet"))
Ch1+Ch2
Overlap
(Ch1 | Ch2) / Overlap
png(file="ConCompareTraces.png",width=1500, height=900, res=100)
plot((Ch1 | Ch2) / Overlap)
dev.off()
#Will check to see if the required packages are installed and if not, will install them
packages <- c("GenomicFeatures", "dplyr", "tidyr", "ggplot2", "patchwork", "plotly", "stringr", "tidyverse", "tibble", "dtwclust")
check.package <- function(package){
if(!(package %in% installed.packages())) install.packages(package)
}
sapply(packages, check.package)
sapply(packages, require, character.only = T)
wd <- setwd('/Users/andrewd/Desktop/Analysis_Workspace/Dilute/')
Induced <- read.csv('Copper/Decon/Outputs/AvgCell_intensity.csv')
NonInduced <- read.csv('NoCopper/Decon/Outputs/AvgCell_intensity.csv')
#=======================================================
# Format Induced data frame
Induced <- Induced[, -c(1:2)]
InducedNames <- paste("Induced", colnames(Induced),  sep = "_")
colnames(Induced) <- InducedNames
names(Induced)[1]<-paste("Time")
# Format NON-Induced data frame
NonInduced <- NonInduced[, -c(1:2)]
NonInducedNames <- paste("NonInduced", colnames(NonInduced),  sep = "_")
colnames(NonInduced) <- NonInducedNames
names(NonInduced)[1]<-paste("Time")
#Merge the two dataframes
MergedDFs <- merge(Induced, NonInduced, by = "Time", all = TRUE)
#Scaling the dataframes so nonInduced = 0
MergedDFs$Ch1ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch1)
MergedDFs$Ch1_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch1_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch1 + MergedDFs$Ch1ScaleFactor
MergedDFs$Ch2ScaleFactor <- 0-(MergedDFs$NonInduced_AverageINT_Ch2)
MergedDFs$Ch2_nonInd_Scaled <- MergedDFs$NonInduced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
MergedDFs$Ch2_Ind_Scaled <- MergedDFs$Induced_AverageINT_Ch2 + MergedDFs$Ch2ScaleFactor
##### PLOTS ###
#Generates and outputs a plot superimposing average intensities of Channel 1 and Channel 2
Ch1 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch1`, color="No Induction (Ch1)")) +
geom_smooth( se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch1`,color = "Induction (Ch1)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction (Ch1)" = "darkgrey",
"Induction (Ch1)" = "Chartreuse3"))
Ch2 <- ggplot(MergedDFs, aes(x=Time, y=`NonInduced_AverageINT_Ch2`, color="No Induction (Ch2)")) +
geom_smooth(se=FALSE) +
ggtitle("Average Normalized Foci Intensity") +
ylab("Normlized Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
geom_smooth(mapping =aes(x=Time, y=`Induced_AverageINT_Ch2`,color = "Induction (Ch2)"), se=FALSE) +
theme(legend.position = "none", axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
scale_colour_manual(name = "",
values = c("No Induction (Ch2)" = "darkgrey",
"Induction (Ch2)" = "darkviolet"))
#Will generate plot with scaled Ch1 and Ch2 intensities
Overlap <- ggplot(MergedDFs, aes(x=Time, y=`Ch1_nonInd_Scaled`, color="No Induction")) +
geom_smooth( se=FALSE) +
ggtitle("Scaled Average Normalized Foci Intensity") +
ylab("Scaled Mean Intensity") +
xlab("Time (s)") +
#ylim(-0.025, 0.025) +
xlim(0, 200) +
geom_vline(xintercept=0, linetype="dashed", color = "Darkgrey") +
geom_vline(xintercept=15, linetype="solid", color = "Darkgrey") +
annotate("text", x=17, y=0.02, label=  "Acquisition", angle = 90, color= "Darkgrey") +
annotate("text", x=2, y=0.02, label=  "Induction", angle = 90, color= "Darkgrey") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5), plot.title = element_text(hjust = 0.5)) +
geom_smooth(mapping =aes(x=Time, y=`Ch1_Ind_Scaled`,color = "Induction (Ch1)"), se=FALSE) +
geom_smooth(mapping =aes(x=Time, y=`Ch2_Ind_Scaled`,color = "Induction (Ch2)"), se=FALSE) +
scale_colour_manual(name = "",
values = c("No Induction" = "grey",
"Induction (Ch1)" = "Chartreuse3",
"Induction (Ch2)" = "darkviolet"))
Ch1+Ch2
Overlap
(Ch1 | Ch2) / Overlap
png(file="deConCompareTraces.png",width=1500, height=900, res=100)
plot((Ch1 | Ch2) / Overlap)
dev.off()
#Will check to see if the required packages are installed and if not, will install them
packages <- c( "dplyr", "tidyr", "ggplot2", "patchwork", "plotly", "stringr", "tidyverse", "tibble", "dtwclust")
check.package <- function(package){
if(!(package %in% installed.packages())) install.packages(package)
}
sapply(packages, check.package)
sapply(packages, require, character.only = T)
inputdata <- read.csv('/Users/andrewd/Desktop/Analysis_Workspace/Dilute/Copper/Con/Outputs/PerCell_Intensity.csv')
CellIds <- as.list(unique(inputdata$CELL))
CellIds <- append("TIME", CellIds)
Ch1_data <- inputdata[, c(3, 14, 15)]
Ch1_data <- reshape(Ch1_data, idvar = "TIME", timevar = "CELL", direction = "wide")
Ch1_data <- Ch1_data[c(1:21),]
names(Ch1_data) <- CellIds
rownames(Ch1_data) <- Ch1_data$TIME
Ch1_data$TIME <- NULL
Ch1_data <- Ch1_data[ , colSums(is.na(Ch1_data))==0]
tCh1_data <- t(Ch1_data)
Ch2_data <- inputdata[, c(3, 13, 15)]
Ch2_data <- reshape(Ch2_data, idvar = "TIME", timevar = "CELL", direction = "wide")
Ch2_data <- Ch2_data[c(1:21),]
names(Ch2_data) <- CellIds
rownames(Ch2_data) <- Ch2_data$TIME
Ch2_data$TIME <- NULL
Ch2_data <- Ch2_data[ , colSums(is.na(Ch2_data))==0]
tCh2_data <- t(Ch2_data)
pc1 <- tsclust(tCh1_data, k = 3L,
distance = "dtw2", centroid = "pam",
seed = 100, trace = TRUE,
return.objects = TRUE)
pc2 <- tsclust(tCh2_data, k = 3L,
distance = "dtw2", centroid = "pam",
seed = 100, trace = TRUE,
return.objects = TRUE)
View(CellIds)
View(tCh1_data)
View(inputdata)
Ch2_data <- inputdata[, c(3, 13, 15)]
View(Ch2_data)
Ch2_data <- reshape(Ch2_data, idvar = "TIME", timevar = "CELL", direction = "wide")
View(Ch2_data)
#Will check to see if the required packages are installed and if not, will install them
packages <- c( "dplyr", "tidyr", "ggplot2", "patchwork", "plotly", "stringr", "tidyverse", "tibble", "dtwclust")
check.package <- function(package){
if(!(package %in% installed.packages())) install.packages(package)
}
sapply(packages, check.package)
sapply(packages, require, character.only = T)
inputdata <- read.csv('/Users/andrewd/Desktop/Analysis_Workspace/Dilute/Copper/Con/Outputs/PerCell_Intensity.csv')
CellIds <- as.list(unique(inputdata$CELL))
CellIds <- append("TIME", CellIds)
Ch1_data <- inputdata[, c(3, 14, 15)]
Ch1_data <- reshape(Ch1_data, idvar = "TIME", timevar = "CELL", direction = "wide")
Ch1_data <- Ch1_data[c(1:20),]
names(Ch1_data) <- CellIds
rownames(Ch1_data) <- Ch1_data$TIME
Ch1_data$TIME <- NULL
Ch1_data <- Ch1_data[ , colSums(is.na(Ch1_data))==0]
tCh1_data <- t(Ch1_data)
Ch2_data <- inputdata[, c(3, 13, 15)]
Ch2_data <- reshape(Ch2_data, idvar = "TIME", timevar = "CELL", direction = "wide")
Ch2_data <- Ch2_data[c(1:20),]
names(Ch2_data) <- CellIds
rownames(Ch2_data) <- Ch2_data$TIME
Ch2_data$TIME <- NULL
Ch2_data <- Ch2_data[ , colSums(is.na(Ch2_data))==0]
tCh2_data <- t(Ch2_data)
pc1 <- tsclust(tCh1_data, k = 3L,
distance = "dtw2", centroid = "pam",
seed = 100, trace = TRUE,
return.objects = TRUE)
pc2 <- tsclust(tCh2_data, k = 3L,
distance = "dtw2", centroid = "pam",
seed = 100, trace = TRUE,
return.objects = TRUE)
plot(pc1) / plot(pc2)
png(file="tsclusters.png",width=3000, height=1800, res=100)
plot(plot(pc1) / plot(pc2))
dev.off()
#=============================
# can we subset on each individual cluster, Calculate the average and then perform Cross correlation analysis
df1 <- data.frame(pc1@datalist)
df1 <- rbind(df1, pc1@cluster)
dfRows1 <- nrow(df1)
Positives_Ch1 <- df1[, df1[dfRows, ] == "1"]
df1 <- data.frame(pc1@datalist)
df1 <- rbind(df1, pc1@cluster)
dfRows1 <- nrow(df1)
Positives_Ch1 <- df1[, df1[dfRows, ] == "1"]
df1 <- data.frame(pc1@datalist)
df1 <- rbind(df1, pc1@cluster)
dfRows1 <- nrow(df1)
Positives_Ch1 <- df1[, df1[dfRows1, ] == "1"]
PositiveCells_Ch1 <- colnames(Positives_Ch1)
Neutrals_Ch1 <- df1[, df1[dfRows1, ] == "2"]
NeutralCells_Ch1 <- colnames(Neutrals_Ch1)
Negatives_Ch1 <- df1[, df1[dfRows1, ] == "3"]
NegativeCells_Ch1 <- colnames(Negatives_Ch1)
df2 <- data.frame(pc2@datalist)
df2 <- rbind(df2, pc2@cluster)
dfRows2 <- nrow(df2)
Positives_Ch2 <- df2[, df2[dfRows2, ] == "1"]
PositiveCells_Ch2 <- colnames(Positives_Ch2)
Neutrals_Ch2 <- df2[, df2[dfRows2, ] == "2"]
NeutralCells_Ch2 <- colnames(Neutrals_Ch2)
Negatives_Ch2 <- df2[, df2[dfRows2, ] == "3"]
NegativeCells_Ch2 <- colnames(Negatives_Ch2)
CellClusters_all <- data.frame(cbind.fill(PositiveCells_Ch1, NeutralCells_Ch1, NegativeCells_Ch1, PositiveCells_Ch2, NeutralCells_Ch2, NegativeCells_Ch2))
CellClusters_all <- data.frame(cbind.fill(PositiveCells_Ch1, NeutralCells_Ch1, NegativeCells_Ch1, PositiveCells_Ch2, NeutralCells_Ch2, NegativeCells_Ch2))
CellClusters <- cbind.fill (CellClusters_all, Doubles)
